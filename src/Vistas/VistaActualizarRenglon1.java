/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import Entidades.Comida;
import Entidades.Dieta;
import Entidades.MenuDiario;
import Entidades.RenglonDeMenu;
import static java.awt.SystemColor.menu;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.table.DefaultTableModel;
import persistencia.ComidaData;
import persistencia.Conexion;
import persistencia.DietaData;
import persistencia.MenuDiarioData;
import persistencia.PacienteData;
import persistencia.RenglonDeMenuData;
import Vistas.Menu;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
/**
 *
 * @author El Angel
 */
public class VistaActualizarRenglon1 extends javax.swing.JInternalFrame {
    Conexion conexion = new Conexion("jdbc:mysql://localhost/nutricionista", "root", "");
    PacienteData pacienteData = new PacienteData(conexion);
    RenglonDeMenuData renglonData = new RenglonDeMenuData(conexion);
    ComidaData comidaData = new ComidaData(conexion);    
    MenuDiarioData menuData = new MenuDiarioData(conexion);
    DietaData dietaData = new DietaData(conexion);
    public static String TipoComidaRenglon;
    public static int jr;
    public static int CodMenu;
    public static int nroRenglon;
    
    private Menu menu;
    
    public VistaActualizarRenglon1(Menu menu) {
       initComponents();
        this.menu = menu;
        armarTabla();        
        cargarCombo();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jr1 = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jr2 = new javax.swing.JRadioButton();
        jr3 = new javax.swing.JRadioButton();
        jr4 = new javax.swing.JRadioButton();
        jr5 = new javax.swing.JRadioButton();
        jr6 = new javax.swing.JRadioButton();
        jr7 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jbSalir = new javax.swing.JButton();
        jcbDieta = new javax.swing.JComboBox<>();
        jbActualizar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbAgregar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Handwriting", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Actualizar Renglon");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre de la Dieta:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, -1, -1));

        jr1.setBackground(new java.awt.Color(0, 0, 0));
        jr1.setText("1");
        jr1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jr1ActionPerformed(evt);
            }
        });
        jPanel1.add(jr1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, -1, -1));

        jLabel3.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Menu:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, -1, 20));

        jr2.setBackground(new java.awt.Color(0, 0, 0));
        jr2.setText("2");
        jr2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jr2ActionPerformed(evt);
            }
        });
        jPanel1.add(jr2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 130, -1, -1));

        jr3.setBackground(new java.awt.Color(0, 0, 0));
        jr3.setText("3");
        jr3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jr3ActionPerformed(evt);
            }
        });
        jPanel1.add(jr3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 130, -1, -1));

        jr4.setBackground(new java.awt.Color(0, 0, 0));
        jr4.setText("4");
        jr4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jr4ActionPerformed(evt);
            }
        });
        jPanel1.add(jr4, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 130, -1, -1));

        jr5.setBackground(new java.awt.Color(0, 0, 0));
        jr5.setText("5");
        jr5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jr5ActionPerformed(evt);
            }
        });
        jPanel1.add(jr5, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 130, -1, -1));

        jr6.setBackground(new java.awt.Color(0, 0, 0));
        jr6.setText("6");
        jr6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jr6ActionPerformed(evt);
            }
        });
        jPanel1.add(jr6, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 130, -1, -1));

        jr7.setBackground(new java.awt.Color(0, 0, 0));
        jr7.setText("7");
        jr7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jr7ActionPerformed(evt);
            }
        });
        jPanel1.add(jr7, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 130, -1, -1));

        tabla.setBackground(new java.awt.Color(153, 153, 153));
        tabla.setForeground(new java.awt.Color(0, 0, 0));
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 600, 170));

        jbSalir.setBackground(new java.awt.Color(153, 153, 153));
        jbSalir.setForeground(new java.awt.Color(0, 0, 0));
        jbSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/exit (2).png"))); // NOI18N
        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });
        jPanel1.add(jbSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 30, -1, -1));

        jcbDieta.setBackground(new java.awt.Color(153, 153, 153));
        jcbDieta.setForeground(new java.awt.Color(0, 0, 0));
        jcbDieta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbDietaActionPerformed(evt);
            }
        });
        jPanel1.add(jcbDieta, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 90, 150, -1));

        jbActualizar.setBackground(new java.awt.Color(153, 153, 153));
        jbActualizar.setForeground(new java.awt.Color(0, 0, 0));
        jbActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/refresh (2).png"))); // NOI18N
        jbActualizar.setText("Actualizar");
        jbActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(jbActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 370, -1, -1));

        jbEliminar.setBackground(new java.awt.Color(153, 153, 153));
        jbEliminar.setForeground(new java.awt.Color(0, 0, 0));
        jbEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/trash (1).png"))); // NOI18N
        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(jbEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 370, -1, -1));

        jbAgregar.setBackground(new java.awt.Color(153, 153, 153));
        jbAgregar.setForeground(new java.awt.Color(0, 0, 0));
        jbAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/add.png"))); // NOI18N
        jbAgregar.setText("Agregar");
        jbAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(jbAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 370, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pexels-n-voitkevich-5794773 (1).jpg"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-290, -520, 1050, 1000));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbDietaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbDietaActionPerformed
       Dieta dieta = (Dieta) jcbDieta.getSelectedItem();       
        if (dieta!=null) {
            borrarFilasTablas();
           jr1.setSelected(false);
           jr2.setSelected(false);
           jr3.setSelected(false);
           jr4.setSelected(false);
           jr5.setSelected(false);
           jr6.setSelected(false);
           jr7.setSelected(false);
            
            int cantidad=renglonData.cantidadDeMenusPorDieta(dieta.getCodDieta());          
            switch (cantidad) {
                case 0:jr1.setEnabled(false);
                jr2.setEnabled(false);
                jr3.setEnabled(false);
                jr4.setEnabled(false);
                jr5.setEnabled(false);
                jr6.setEnabled(false);
                jr7.setEnabled(false);break;
                case 1: jr1.setEnabled(true);
                        jr2.setEnabled(false);jr2.setSelected(false);
                        jr3.setEnabled(false);jr3.setSelected(false);
                        jr4.setEnabled(false);jr4.setSelected(false);
                        jr5.setEnabled(false);jr5.setSelected(false);
                        jr6.setEnabled(false);jr6.setSelected(false);
                        jr7.setEnabled(false);jr7.setSelected(false);break;
                case 2:jr1.setEnabled(true);
                jr2.setEnabled(true);
                jr3.setEnabled(false);jr3.setSelected(false);
                jr4.setEnabled(false);jr4.setSelected(false);
                jr5.setEnabled(false);jr5.setSelected(false);
                jr6.setEnabled(false);jr6.setSelected(false);
                jr7.setEnabled(false);jr7.setSelected(false);break;
                case 3:jr1.setEnabled(true);
                jr2.setEnabled(true);
                jr3.setEnabled(true);
                jr4.setEnabled(false);jr4.setSelected(false);
                jr5.setEnabled(false);jr5.setSelected(false);
                jr6.setEnabled(false);jr6.setSelected(false);
                jr7.setEnabled(false);jr7.setSelected(false);break;
                case 4:jr1.setEnabled(true);
                jr2.setEnabled(true);
                jr3.setEnabled(true);
                jr4.setEnabled(true);
                jr5.setEnabled(false);jr5.setSelected(false);
                jr6.setEnabled(false);jr6.setSelected(false);
                jr7.setEnabled(false);jr7.setSelected(false);break;
                case 5:jr1.setEnabled(true);
                jr2.setEnabled(true);
                jr3.setEnabled(true);
                jr4.setEnabled(true);
                jr5.setEnabled(true);
                jr6.setEnabled(false);jr6.setSelected(false);
                jr7.setEnabled(false);jr7.setSelected(false);break;
                case 6:jr1.setEnabled(true);
                jr2.setEnabled(true);
                jr3.setEnabled(true);
                jr4.setEnabled(true);
                jr5.setEnabled(true);
                jr6.setEnabled(true);
                jr7.setEnabled(false);jr7.setSelected(false);break;
                case 7:jr1.setEnabled(true);
                jr2.setEnabled(true);
                jr3.setEnabled(true);
                jr4.setEnabled(true);
                jr5.setEnabled(true);
                jr6.setEnabled(true);
                jr7.setEnabled(true);break;               
            }
        }
    }//GEN-LAST:event_jcbDietaActionPerformed

    private void jr1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jr1ActionPerformed
         jr2.setSelected(false);
       jr3.setSelected(false);
       jr4.setSelected(false);
       jr5.setSelected(false);
       jr6.setSelected(false);
       jr7.setSelected(false);      
        cargarTodasFilas(1);
       
    }//GEN-LAST:event_jr1ActionPerformed

    private void jr2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jr2ActionPerformed
         jr1.setSelected(false);
       jr3.setSelected(false);
       jr4.setSelected(false);
       jr5.setSelected(false);
       jr6.setSelected(false);
       jr7.setSelected(false);             
        cargarTodasFilas(2);
    }//GEN-LAST:event_jr2ActionPerformed

    private void jr3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jr3ActionPerformed
        jr1.setSelected(false);
       jr2.setSelected(false);
       jr4.setSelected(false);
       jr5.setSelected(false);
       jr6.setSelected(false);
       jr7.setSelected(false);            
        cargarTodasFilas(3);
    }//GEN-LAST:event_jr3ActionPerformed

    private void jr4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jr4ActionPerformed
       jr1.setSelected(false);
       jr2.setSelected(false);
       jr3.setSelected(false);
       jr5.setSelected(false);
       jr6.setSelected(false);
       jr7.setSelected(false);            
        cargarTodasFilas(4);
    }//GEN-LAST:event_jr4ActionPerformed

    private void jr5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jr5ActionPerformed
       jr1.setSelected(false);
       jr2.setSelected(false);
       jr3.setSelected(false);
       jr4.setSelected(false);
       jr6.setSelected(false);
       jr7.setSelected(false);           
        cargarTodasFilas(5);
    }//GEN-LAST:event_jr5ActionPerformed

    private void jr6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jr6ActionPerformed
       jr1.setSelected(false);
       jr2.setSelected(false);
       jr3.setSelected(false);
       jr4.setSelected(false);
       jr5.setSelected(false);
       jr7.setSelected(false);            
        cargarTodasFilas(6);
    }//GEN-LAST:event_jr6ActionPerformed

    private void jr7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jr7ActionPerformed
       jr1.setSelected(false);
       jr2.setSelected(false);
       jr3.setSelected(false);
       jr4.setSelected(false);
       jr5.setSelected(false);
       jr6.setSelected(false);           
        cargarTodasFilas(7);
    }//GEN-LAST:event_jr7ActionPerformed

    private void jbActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbActualizarActionPerformed
        if (tabla.getSelectedRow()!=-1) {
            
            nroRenglon=(int)tabla.getValueAt(tabla.getSelectedRow(), 0);
             RenglonDeMenu renglon = renglonData.buscarRenglonDeMenuPorId(nroRenglon);
             TipoComidaRenglon = renglon.getComida().getTipoComida();
             
             ArrayList<JRadioButton> lista= new ArrayList();
             lista.add(jr1);
             lista.add(jr2);
             lista.add(jr3);
             lista.add(jr4);
             lista.add(jr5);
             lista.add(jr6);
             lista.add(jr7);
             int contador=0;
             for (JRadioButton jRadioButton : lista) {
                 contador++;
                 if (jRadioButton.isSelected()) {
                     break;
                 }
            }
             jr=contador;             
             VistaActualizarRenglon var = new VistaActualizarRenglon(menu,this);
             
             menu.getEscritorio().add(var);
             var.setVisible(true);
             
             
        }else{
            JOptionPane.showMessageDialog(this, "Seleccione un Renglon de la tabla para actualizar");
        }        
    }//GEN-LAST:event_jbActualizarActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        if (tabla.getSelectedRow()!=-1) {
            int nroRenglon = (int) tabla.getValueAt(tabla.getSelectedRow(), 0);
            renglonData.eliminarRenglonDeMenu(nroRenglon);
            JOptionPane.showMessageDialog(this, "Eliminado Exitoso");
            Dieta die =(Dieta) jcbDieta.getSelectedItem();
            Dieta dieta = dietaData.buscarDieta(die.getCodDieta());
            int caloriasTotales = renglonData.caloriasTotalesDeUnaDieta(dieta.getCodDieta());
            dieta.setTotalCalorias(caloriasTotales);
            dietaData.actualizarDieta(dieta);
              ArrayList<JRadioButton> lista= new ArrayList();
             lista.add(jr1);
             lista.add(jr2);
             lista.add(jr3);
             lista.add(jr4);
             lista.add(jr5);
             lista.add(jr6);
             lista.add(jr7);
             int contador=0;
             for (JRadioButton jRadioButton : lista) {
                 contador++;
                 if (jRadioButton.isSelected()) {
                     break;
                 }
            }
             jr=contador;
             cargarTodasFilas(contador);
            
        }else{
            JOptionPane.showMessageDialog(this, "Seleccione un Renglon de la tabla para actualizar");
        }
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jbAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarActionPerformed
        if (!jr1.isSelected() && !jr2.isSelected() && !jr3.isSelected() && !jr4.isSelected() && !jr5.isSelected() && !jr6.isSelected() && !jr7.isSelected()) {
            JOptionPane.showMessageDialog(this, "Seleccione un Menu");
        } else {

            ArrayList<JRadioButton> lista = new ArrayList();
            lista.add(jr1);
            lista.add(jr2);
            lista.add(jr3);
            lista.add(jr4);
            lista.add(jr5);
            lista.add(jr6);
            lista.add(jr7);
            int contadorRadioButton = 0;
            for (JRadioButton jRadioButton : lista) {
                contadorRadioButton++;
                if (jRadioButton.isSelected()) {
                    break;
                }
            }
            jr = contadorRadioButton;
            int contadorParaCodMenu = 0;           
            Dieta dieta = (Dieta) jcbDieta.getSelectedItem();
            for (Integer listaDeMenu : renglonData.LosCodMenuDeUnaDieta(dieta.getCodDieta())) {
                //Esta lista tiene en orden los menudiario de la dieta si el jrSeleccionado es 1 tiene que mostra
                //el primer los renglones del menu            
                contadorParaCodMenu++;
                if (contadorParaCodMenu == jr) {
                    CodMenu = listaDeMenu;
                    break;
                }
            }
            
         
            int cantidad = 0;
            for (RenglonDeMenu renglonDeMenu : renglonData.listarRenglonesDelaListaCodMenu(CodMenu)) {
                cantidad++;
            }
            
            if (cantidad != 5) {
            List<String> tiposDeComidaPosibles = Arrays.asList("desayuno", "almuerzo", "snack", "cena", "merienda");

            Set<String> tiposDeComidaEncontrados = new HashSet<>();

            for (RenglonDeMenu renglonDeMenu : renglonData.listarRenglonesDelaListaCodMenu(CodMenu)) {
                String tipoComida = renglonDeMenu.getComida().getTipoComida();
                tiposDeComidaEncontrados.add(tipoComida);
            }

            for (String tipo : tiposDeComidaPosibles) {
                if (!tiposDeComidaEncontrados.contains(tipo)) {
                    TipoComidaRenglon=tipo;
                    break;
                }
            }
                VistaActualizarRenglonAgregar var = new VistaActualizarRenglonAgregar(menu, this);
                menu.getEscritorio().add(var);
                var.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "El Menu posee el maximo de Renglones permitidos");
            }
        }
    }//GEN-LAST:event_jbAgregarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbActualizar;
    private javax.swing.JButton jbAgregar;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Dieta> jcbDieta;
    private javax.swing.JRadioButton jr1;
    private javax.swing.JRadioButton jr2;
    private javax.swing.JRadioButton jr3;
    private javax.swing.JRadioButton jr4;
    private javax.swing.JRadioButton jr5;
    private javax.swing.JRadioButton jr6;
    private javax.swing.JRadioButton jr7;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int fila, int columna) {
            return false;
        }
    };

    private void armarTabla() {
        modelo.addColumn("Codigo");
        modelo.addColumn("Nombre C.");
        modelo.addColumn("Tipo");
        modelo.addColumn("Porciones");
        modelo.addColumn("Calorias");
        modelo.addColumn("Menu Cod.");
        tabla.setModel(modelo);
    }

    public void cargarTodasFilas(int jrSeleccionado) {
        borrarFilasTablas();
        Dieta dieta=(Dieta) jcbDieta.getSelectedItem();            
        int contador = 0; 
        for (Integer listaDeMenu : renglonData.LosCodMenuDeUnaDieta(dieta.getCodDieta())) {
            //Esta lista tiene en orden los menudiario de la dieta si el jrSeleccionado es 1 tiene que mostra
            //el primer los renglones del menu            
            contador++;           
            if (contador == jrSeleccionado) {
                CodMenu = listaDeMenu;
                break;
            }
        }
       // Testing
        for (RenglonDeMenu listaRenglon : renglonData.listarRenglonesDelaListaCodMenu(CodMenu)) {
            modelo.addRow(new Object[]{
                listaRenglon.getNroRenglon(),
                listaRenglon.getComida().getNombre(),
                listaRenglon.getComida().getTipoComida(),
                listaRenglon.getCantidadPorciones(),
                listaRenglon.getSubtotalCalorias(),
                listaRenglon.getMenu().getCodMenu()
            });   
        }
        
    }
   

    public void borrarFilasTablas() {
        int fila = modelo.getRowCount() - 1;
        for (int i = fila; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }
    
    private void cargarCombo(){   
                for (Dieta listarTodosMenu : renglonData.listarTodosMenus()) {
            jcbDieta.addItem(listarTodosMenu);
        }
    }
}
