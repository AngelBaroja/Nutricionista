/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import Entidades.Dieta;
import Entidades.Paciente;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.temporal.ChronoUnit;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import persistencia.Conexion;
import persistencia.DietaData;
import persistencia.PacienteData;

/**
 *
 * @author El Angel
 */
public class VistaGenerarDieta extends javax.swing.JInternalFrame {

    Conexion conexion = new Conexion("jdbc:mysql://localhost/nutricionista", "root", "");
    PacienteData pacienteData = new PacienteData(conexion);
    DietaData dietaData = new DietaData(conexion);

    /**
     * Creates new form VistaGenerarDieta
     */
    public VistaGenerarDieta() {
        initComponents();
        cargarCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jtDietaConPaciente = new javax.swing.JTextField();
        jcbPaciente = new javax.swing.JComboBox<>();
        jdcFechaInicial = new com.toedter.calendar.JDateChooser();
        jlFechaInicial = new javax.swing.JLabel();
        jdcFechaFinal = new com.toedter.calendar.JDateChooser();
        jlFechaFinal = new javax.swing.JLabel();
        jlPesoInicial = new javax.swing.JLabel();
        jbGuardarConPaciente = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Generar Dieta para un Paciente");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 550, -1));

        jLabel5.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Nombre de la Dieta:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, -1, -1));

        jLabel6.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Paciente:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, -1, -1));

        jLabel7.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Fecha de Inicio:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, -1, -1));

        jLabel8.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Fecha de Final:");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, -1, -1));

        jLabel9.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Peso Inicial:");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, -1, -1));

        jtDietaConPaciente.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jPanel2.add(jtDietaConPaciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 150, 100, -1));

        jcbPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbPacienteActionPerformed(evt);
            }
        });
        jPanel2.add(jcbPaciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, -1, -1));

        jdcFechaInicial.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jdcFechaInicialPropertyChange(evt);
            }
        });
        jPanel2.add(jdcFechaInicial, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 200, -1, -1));

        jlFechaInicial.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jlFechaInicial.setText("                            ");
        jPanel2.add(jlFechaInicial, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 260, -1, -1));

        jdcFechaFinal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jdcFechaFinalPropertyChange(evt);
            }
        });
        jPanel2.add(jdcFechaFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 250, -1, -1));

        jlFechaFinal.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jlFechaFinal.setText("                            ");
        jPanel2.add(jlFechaFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 310, -1, -1));

        jlPesoInicial.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jlPesoInicial.setText("                         ");
        jPanel2.add(jlPesoInicial, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 310, -1, -1));

        jbGuardarConPaciente.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbGuardarConPaciente.setForeground(new java.awt.Color(153, 153, 153));
        jbGuardarConPaciente.setText("Guardar");
        jbGuardarConPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarConPacienteActionPerformed(evt);
            }
        });
        jPanel2.add(jbGuardarConPaciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 383, 110, -1));

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });
        jPanel2.add(jbSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 390, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/descarga (2).jpeg"))); // NOI18N
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 490));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jdcFechaInicialPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jdcFechaInicialPropertyChange
        if (jdcFechaFinal.getDate() != null) {
            LocalDate fechaInicial = jdcFechaInicial.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            LocalDate fechaFinal = jdcFechaFinal.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            int diasDiferencia = (int) ChronoUnit.DAYS.between(fechaInicial, fechaFinal);

            if (diasDiferencia < 3 || diasDiferencia > 7) {
                JOptionPane.showMessageDialog(this,
                        "La fecha Inicial debe estar entre 3 y 7 d√≠as antes de la fecha Final.",
                        "Error en las fechas",
                        JOptionPane.ERROR_MESSAGE);

            }

        }

        Date fechaSeleccionada = jdcFechaInicial.getDate();
        if (fechaSeleccionada != null) {
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
            String fechaFormateada = formato.format(fechaSeleccionada);
            jlFechaInicial.setText(fechaFormateada);
        }
    }//GEN-LAST:event_jdcFechaInicialPropertyChange

    private void jdcFechaFinalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jdcFechaFinalPropertyChange

        if (jdcFechaInicial.getDate() != null) {
            LocalDate fechaInicial = jdcFechaInicial.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            LocalDate fechaFinal = jdcFechaFinal.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            int diasDiferencia = (int) ChronoUnit.DAYS.between(fechaInicial, fechaFinal);

            if (diasDiferencia < 3 || diasDiferencia > 7) {
                JOptionPane.showMessageDialog(this,
                        "La fecha final debe situarse entre 3 y 7 d√≠as a partir de la fecha inicial.",
                        "Error en las fechas",
                        JOptionPane.ERROR_MESSAGE);
            }

        }
        Date fechaSeleccionada = jdcFechaFinal.getDate();
        if (fechaSeleccionada != null) {
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
            String fechaFormateada = formato.format(fechaSeleccionada);
            jlFechaFinal.setText(fechaFormateada);
        }

    }//GEN-LAST:event_jdcFechaFinalPropertyChange

    private void jcbPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbPacienteActionPerformed
        if (jcbPaciente.getSelectedItem() != null) {
            if (!jcbPaciente.getSelectedItem().equals("- - PACIENTES - -")) {
                int indiceSeleccionado = jcbPaciente.getSelectedIndex();
                int contador = 0;
                for (Paciente a : pacienteData.listaPacienteSinDieta()) {
                    contador++;
                    if (contador == indiceSeleccionado) {
                        jlPesoInicial.setText(String.valueOf(a.getPesoActual()));
                        break;
                    }
                }

            } else {
                jlPesoInicial.setText("");
            }
        }


    }//GEN-LAST:event_jcbPacienteActionPerformed

    private void jbGuardarConPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarConPacienteActionPerformed
        boolean invalidado = false;
        if (jtDietaConPaciente.getText().equals("")) {
            JOptionPane.showMessageDialog(this,
                    "Complete el campo del nombre de la Dieta",
                    "Error en los Campos",
                    JOptionPane.ERROR_MESSAGE);
            invalidado = true;
        } else if (jcbPaciente.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this,
                    "Seleccione un Paciente",
                    "Error en los Campos",
                    JOptionPane.ERROR_MESSAGE);
            invalidado = true;
        } else if (jdcFechaInicial.getDate() == null || jdcFechaFinal.getDate() == null) {
            JOptionPane.showMessageDialog(this,
                    "Seleccione una Fecha de inicio y de fin",
                    "Error en las fechas",
                    JOptionPane.ERROR_MESSAGE);
            invalidado = true;
        } else if (jdcFechaInicial.getDate() != null && jdcFechaFinal.getDate() != null) {
            LocalDate fechaInicial = jdcFechaInicial.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            LocalDate fechaFinal = jdcFechaFinal.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            int diasDiferencia = (int) ChronoUnit.DAYS.between(fechaInicial, fechaFinal);
            if (diasDiferencia < 3 || diasDiferencia > 7) {
                JOptionPane.showMessageDialog(this,
                        "Verifique que las fechas tengan \n entre 3 a 7 dias de diferencia",
                        "Error en las fechas",
                        JOptionPane.ERROR_MESSAGE);
                invalidado = true;
            }

        }
        if (!invalidado) {
            Dieta dieta = new Dieta();
            dieta.setNombreD(jtDietaConPaciente.getText());
            int indiceSeleccionado = jcbPaciente.getSelectedIndex();
            int contador = 0;
            for (Paciente a : pacienteData.listaPacienteSinDieta()) {
                contador++;
                if (contador == indiceSeleccionado) {
                    dieta.setPaciente(a);
                    break;
                }
            }
            dieta.setFechaIni(jdcFechaInicial.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
            dieta.setFechaFin(jdcFechaFinal.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
            dieta.setPesoInicial(Double.parseDouble(jlPesoInicial.getText()));
            dieta.setEstado(true);
            dietaData.GuardarDietaConPaciente(dieta);
            JOptionPane.showMessageDialog(this, "Dieta Guardada");
            limpiarCampos();
            limpiarCombo();
            cargarCombo();
        }
    }//GEN-LAST:event_jbGuardarConPacienteActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton jbGuardarConPaciente;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<String> jcbPaciente;
    private com.toedter.calendar.JDateChooser jdcFechaFinal;
    private com.toedter.calendar.JDateChooser jdcFechaInicial;
    private javax.swing.JLabel jlFechaFinal;
    private javax.swing.JLabel jlFechaInicial;
    private javax.swing.JLabel jlPesoInicial;
    private javax.swing.JTextField jtDietaConPaciente;
    // End of variables declaration//GEN-END:variables

    private void cargarCombo() {
        jcbPaciente.addItem("- - PACIENTES - -");
        for (Paciente a : pacienteData.listaPacienteSinDieta()) {
            jcbPaciente.addItem(a.toString());
        }
    }

    private void limpiarCampos() {
        jtDietaConPaciente.setText("");
        jlFechaInicial.setText("");
        jlFechaFinal.setText("");
        jlPesoInicial.setText("");
    }

    public void limpiarCombo() {
        jcbPaciente.removeAllItems();
    }
}
