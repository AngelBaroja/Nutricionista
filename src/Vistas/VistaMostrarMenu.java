/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import Entidades.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import persistencia.Conexion;
import persistencia.MenuDiarioData;
import persistencia.RenglonDeMenuData;

/**
 *
 * @author Matias
 */
public class VistaMostrarMenu extends javax.swing.JInternalFrame {
    
    Conexion conexion = new Conexion("jdbc:mysql://localhost/nutricionista", "root", "");
    MenuDiarioData menuData = new MenuDiarioData(conexion);
    RenglonDeMenuData renglonData = new RenglonDeMenuData(conexion);
    public VistaMostrarMenu() {
        initComponents();
        armarTabla();
        cargarlistaMenu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMenu = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaMenu);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, -1, 240));

        jLabel1.setFont(new java.awt.Font("Roboto Medium", 0, 30)); // NOI18N
        jLabel1.setText("Mostrar Menu Diario");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 50, -1, -1));

        jButton3.setText("Activar/Dsactivar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 410, -1, -1));

        jButton2.setText("ELIMINAR");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 410, 91, -1));

        jButton1.setText("SALIR");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 30, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/4994444c2a8447af58521d63b78b4b02.jpg"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -460, 680, 930));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        dispose();
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        int filaSeleccionada = tablaMenu.getSelectedRow();
        if (filaSeleccionada != -1) {
  
        int id = (int) tablaMenu.getValueAt(filaSeleccionada, 0);
        
        int confirmacion = JOptionPane.showConfirmDialog(this, "¿Estás seguro de que deseas eliminar este elemento?", "Confirmación de borrado", JOptionPane.YES_NO_OPTION);
        
        if (confirmacion == JOptionPane.YES_OPTION) {
          
            menuData.borrarMenuDiario(id);
            borrarFilasTablas();
            cargarlistaMenu();

        }
    } else {
        JOptionPane.showMessageDialog(this, "Selecciona un elemento para eliminar.");
    }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int filaSeleccionada = tablaMenu.getSelectedRow();
        if (filaSeleccionada != -1) {
  
            int id = (int) tablaMenu.getValueAt(filaSeleccionada, 0);
            String estado =  (String) tablaMenu.getValueAt(filaSeleccionada, 3);
            if (estado.equals("Activa")) {
                int confirmacion = JOptionPane.showConfirmDialog(this, "¿Estás seguro de que deseas dar de baja este elemento?", "Confirmación de baja", JOptionPane.YES_NO_OPTION);

                if (confirmacion == JOptionPane.YES_OPTION) {

                    menuData.CambiarEstadoFalse(id);
                    borrarFilasTablas();
                    cargarlistaMenu();
                }
            } else {
                int confirmacion = JOptionPane.showConfirmDialog(this, "¿Estás seguro de que deseas dar de alta este elemento?", "Confirmación de alta", JOptionPane.YES_NO_OPTION);

                if (confirmacion == JOptionPane.YES_OPTION) {

                    menuData.CambiarEstadoTrue(id);
                    borrarFilasTablas();
                    cargarlistaMenu();
                }
            }
    } else {
        JOptionPane.showMessageDialog(this, "Selecciona un elemento para dar de baja/alta.");
    }
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaMenu;
    // End of variables declaration//GEN-END:variables
    private DefaultTableModel modelo = new DefaultTableModel(){
        public boolean isCellEditable(int fila, int columna){
            return false;
        }
    };
    private void armarTabla(){
        modelo.addColumn("Codigo");
        modelo.addColumn("Nombre Dieta");
        modelo.addColumn("Dia");
        modelo.addColumn("Estado");
        modelo.addColumn("¿Renglones Cargados?");
    }

    private void cargarlistaMenu() { 

        for (MenuDiario m : menuData.listaMenuDiarioConEstadoRenglones()) {
            modelo.addRow(new Object[]{
            m.getCodMenu(),
            m.getDieta().getNombreD(),
            m.getDia(),
            m.isEstado() ? "Activa" : "No activa",
            m.isRenglones() ? "Sí" : "No"
        });
        }

        tablaMenu.setModel(modelo);
    }
    private void borrarFilasTablas(){
        int fila= modelo.getRowCount()-1;
        for (int i = fila ; i >= 0 ; i--) {
            modelo.removeRow(i);
        }
    }
        private void borrarColum(){
        int colum = modelo.getColumnCount()-1;
        for (int i = colum; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }
}
