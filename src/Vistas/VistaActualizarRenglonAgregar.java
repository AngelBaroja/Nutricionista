/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import Entidades.Comida;
import Entidades.Dieta;
import Entidades.MenuDiario;
import Entidades.RenglonDeMenu;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.math.MathContext;
import java.util.ArrayList;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerNumberModel;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import persistencia.ComidaData;
import persistencia.Conexion;
import persistencia.DietaData;
import persistencia.MenuDiarioData;
import persistencia.PacienteData;
import persistencia.RenglonDeMenuData;

/**
 *
 * @author El Angel
 */
public class VistaActualizarRenglonAgregar extends javax.swing.JInternalFrame {

    Conexion conexion = new Conexion("jdbc:mysql://localhost/nutricionista", "root", "");
    PacienteData pacienteData = new PacienteData(conexion);
    RenglonDeMenuData renglonData = new RenglonDeMenuData(conexion);
    ComidaData comidaData = new ComidaData(conexion);
    MenuDiarioData menuData = new MenuDiarioData(conexion); 
    DietaData dietaData = new DietaData(conexion);
    private Menu menu;
    private VistaActualizarRenglon1 vista;

 public VistaActualizarRenglonAgregar(Menu menu, VistaActualizarRenglon1 vista) {
    initComponents();
    this.menu=menu;  
    this.vista=vista;
    armarTabla();
    cargarFilas();
    buscarComida();
    agregarValidacionNumerica(jtDesdeCalorias);
    agregarValidacionNumerica(jtHastaCalorias);
    configurarSpinner(jsCantidadPorciones);
   
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtNombreComida = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jtDesdeCalorias = new javax.swing.JTextField();
        jtHastaCalorias = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtDetalleComida = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jsCantidadPorciones = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jlCaloriasTotales = new javax.swing.JLabel();
        jbInsertarMenu = new javax.swing.JButton();
        jbInsertarMenu1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Handwriting", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Actualiza la Comida");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre de la Comida : ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, -1, -1));

        jtNombreComida.setBackground(new java.awt.Color(153, 153, 153));
        jtNombreComida.setForeground(new java.awt.Color(0, 0, 0));
        jtNombreComida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtNombreComidaKeyReleased(evt);
            }
        });
        jPanel1.add(jtNombreComida, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 80, 120, -1));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 250, 580, 120));

        jLabel4.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Calorias desde:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 160, -1, -1));

        jtDesdeCalorias.setBackground(new java.awt.Color(153, 153, 153));
        jtDesdeCalorias.setForeground(new java.awt.Color(0, 0, 0));
        jtDesdeCalorias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtDesdeCaloriasKeyReleased(evt);
            }
        });
        jPanel1.add(jtDesdeCalorias, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 160, -1, -1));

        jtHastaCalorias.setBackground(new java.awt.Color(153, 153, 153));
        jtHastaCalorias.setForeground(new java.awt.Color(0, 0, 0));
        jtHastaCalorias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtHastaCaloriasKeyReleased(evt);
            }
        });
        jPanel1.add(jtHastaCalorias, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 160, -1, -1));

        jLabel6.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Hasta:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 160, -1, -1));

        jLabel7.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Detalle de la Comida : ");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 120, -1, -1));

        jtDetalleComida.setBackground(new java.awt.Color(153, 153, 153));
        jtDetalleComida.setForeground(new java.awt.Color(0, 0, 0));
        jtDetalleComida.setToolTipText("");
        jtDetalleComida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jtDetalleComidaMouseEntered(evt);
            }
        });
        jtDetalleComida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtDetalleComidaKeyReleased(evt);
            }
        });
        jPanel1.add(jtDetalleComida, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 120, 120, -1));

        jLabel8.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Cantidad de Porciones:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 380, -1, 20));

        jsCantidadPorciones.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jsCantidadPorcionesStateChanged(evt);
            }
        });
        jPanel1.add(jsCantidadPorciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 380, -1, -1));

        jLabel9.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Calorias Totales:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 380, -1, -1));

        jlCaloriasTotales.setBackground(new java.awt.Color(153, 153, 153));
        jlCaloriasTotales.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N
        jlCaloriasTotales.setForeground(new java.awt.Color(0, 0, 0));
        jlCaloriasTotales.setText("                                ");
        jPanel1.add(jlCaloriasTotales, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 380, -1, -1));

        jbInsertarMenu.setBackground(new java.awt.Color(153, 153, 153));
        jbInsertarMenu.setForeground(new java.awt.Color(0, 0, 0));
        jbInsertarMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/add.png"))); // NOI18N
        jbInsertarMenu.setText("Agregar Comida");
        jbInsertarMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbInsertarMenuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jbInsertarMenuMouseExited(evt);
            }
        });
        jbInsertarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInsertarMenuActionPerformed(evt);
            }
        });
        jPanel1.add(jbInsertarMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 200, -1, 30));

        jbInsertarMenu1.setBackground(new java.awt.Color(153, 153, 153));
        jbInsertarMenu1.setForeground(new java.awt.Color(0, 0, 0));
        jbInsertarMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/exit (2).png"))); // NOI18N
        jbInsertarMenu1.setText("Salir");
        jbInsertarMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbInsertarMenu1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jbInsertarMenu1MouseExited(evt);
            }
        });
        jbInsertarMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInsertarMenu1ActionPerformed(evt);
            }
        });
        jPanel1.add(jbInsertarMenu1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 20, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pexels-n-voitkevich-5794773 (1).jpg"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-370, 0, 1140, 480));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtNombreComidaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNombreComidaKeyReleased
     buscarComida();
    }//GEN-LAST:event_jtNombreComidaKeyReleased

    private void jtDetalleComidaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtDetalleComidaKeyReleased
     buscarComida();
    }//GEN-LAST:event_jtDetalleComidaKeyReleased

    private void jtDesdeCaloriasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtDesdeCaloriasKeyReleased
       buscarComida();
    }//GEN-LAST:event_jtDesdeCaloriasKeyReleased

    private void jtHastaCaloriasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtHastaCaloriasKeyReleased
       buscarComida();
    }//GEN-LAST:event_jtHastaCaloriasKeyReleased

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        int caloriasPorcion=(int) tabla.getValueAt(tabla.getSelectedRow(), 3);
        int spinner =(Integer) jsCantidadPorciones.getValue();
        jlCaloriasTotales.setText(String.valueOf(caloriasPorcion*(Integer) jsCantidadPorciones.getValue()));
    }//GEN-LAST:event_tablaMouseClicked

    private void jsCantidadPorcionesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jsCantidadPorcionesStateChanged
        if (tabla.getSelectedRow()!=-1) {
            int caloriasPorcion=(int) tabla.getValueAt(tabla.getSelectedRow(), 3);
            int spinner =(Integer) jsCantidadPorciones.getValue();
            jlCaloriasTotales.setText(String.valueOf(caloriasPorcion*(Integer) jsCantidadPorciones.getValue()));
        }
    }//GEN-LAST:event_jsCantidadPorcionesStateChanged

    private void jbInsertarMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbInsertarMenuMouseEntered
          jbInsertarMenu.setToolTipText("Permite actualizar la comida del Renglon de Menu");
          jbInsertarMenu.setFont(new java.awt.Font("Dialog", java.awt.Font.BOLD, 13));
          setCursor(new Cursor(Cursor.HAND_CURSOR));
          jbInsertarMenu.setBorder(new LineBorder(Color.RED, 2));
    }//GEN-LAST:event_jbInsertarMenuMouseEntered

    private void jbInsertarMenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbInsertarMenuMouseExited
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
         jbInsertarMenu.setFont(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 13));
         jbInsertarMenu.setBorder(new LineBorder(Color.GRAY, 1));
    }//GEN-LAST:event_jbInsertarMenuMouseExited

    private void jtDetalleComidaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtDetalleComidaMouseEntered
       jtDetalleComida.setToolTipText("Porfavor, solo ingresar un Ingrediente.");
    }//GEN-LAST:event_jtDetalleComidaMouseEntered

    private void jbInsertarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInsertarMenuActionPerformed
        if (tabla.getSelectedRow()!=-1) {
            RenglonDeMenu renglon = new RenglonDeMenu();
            renglon.setComida(comidaData.buscarComidaPorId((int)tabla.getValueAt(tabla.getSelectedRow(), 0)));
            renglon.setCantidadPorciones((Integer)jsCantidadPorciones.getValue());
            renglon.setSubtotalCalorias(Integer.parseInt(jlCaloriasTotales.getText()));
            renglon.setMenu(menuData.BuscarMenu(VistaActualizarRenglon1.CodMenu));
            renglonData.guardarRenglonDeMenu(renglon);
            JOptionPane.showMessageDialog(this, "El Renglon de Menu fue Agregado");
            
             MenuDiario menudia =menuData.BuscarMenu(VistaActualizarRenglon1.CodMenu);
             Dieta dieta = dietaData.buscarDieta(menudia.getDieta().getCodDieta());
             int caloriasTotales = renglonData.caloriasTotalesDeUnaDieta(dieta.getCodDieta());
             dieta.setTotalCalorias(caloriasTotales);
             dietaData.actualizarDieta(dieta);
            
            switch (VistaActualizarRenglon1.jr) {
                case 1:vista.cargarTodasFilas(1);break;
                case 2:vista.cargarTodasFilas(2);break;
                case 3:vista.cargarTodasFilas(3);break;
                case 4:vista.cargarTodasFilas(4);break;
                case 5:vista.cargarTodasFilas(5);break;
                case 6:vista.cargarTodasFilas(6);break;
                case 7:vista.cargarTodasFilas(7);break;                
            }
            dispose();          
//            
        }else{
            JOptionPane.showMessageDialog(this, "Para Agregar, seleccione una Comida de la Tabla");
        }
    }//GEN-LAST:event_jbInsertarMenuActionPerformed

    private void jbInsertarMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInsertarMenu1ActionPerformed
        dispose();
    }//GEN-LAST:event_jbInsertarMenu1ActionPerformed

    private void jbInsertarMenu1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbInsertarMenu1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jbInsertarMenu1MouseExited

    private void jbInsertarMenu1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbInsertarMenu1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jbInsertarMenu1MouseEntered


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbInsertarMenu;
    private javax.swing.JButton jbInsertarMenu1;
    private javax.swing.JLabel jlCaloriasTotales;
    private javax.swing.JSpinner jsCantidadPorciones;
    private javax.swing.JTextField jtDesdeCalorias;
    private javax.swing.JTextField jtDetalleComida;
    private javax.swing.JTextField jtHastaCalorias;
    private javax.swing.JTextField jtNombreComida;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
   
    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int fila, int columna) {
            return false;
        }
    };

    private void armarTabla() {
        modelo.addColumn("Codigo");
        modelo.addColumn("Nombre");
        modelo.addColumn("Tipo");
        modelo.addColumn("Calorias");
        modelo.addColumn("Detalle");
        tabla.setModel(modelo);
    }

    private void cargarFilas() {
        for (Comida listaComida : comidaData.listarComidasActivas()) {
            modelo.addRow(new Object[]{
                listaComida.getCodComida(),
                listaComida.getNombre(),
                listaComida.getTipoComida(),
                listaComida.getCaloriasPorPorcion(),
                listaComida.getDetalle()
            });
        }
    }

    private void borrarFilasTablas() {
        int fila = modelo.getRowCount() - 1;
        for (int i = fila; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }

   
    
    public void buscarComida(){
         borrarFilasTablas();

        String nombreComida = jtNombreComida.getText().toLowerCase();
        String detalleComida = jtDetalleComida.getText().toLowerCase();
        String desdeCalorias = jtDesdeCalorias.getText();
        String hastaCalorias = jtHastaCalorias.getText();     

        // Filtrar las comidas activas
        for (Comida comida : comidaData.listarComidasActivas()) {
            // Validar si coincide el nombre o si el campo está vacío
            boolean coincideNombre = comida.getNombre().toLowerCase().contains(nombreComida) || nombreComida.isEmpty();

            // Validar si coincide el detalle o si el campo está vacío
            boolean coincideDetalle = comida.getDetalle().toLowerCase().contains(detalleComida) || detalleComida.isEmpty();

            // Verificar el rango de calorías (si está definido)
            boolean coincideCalorias = true; // Inicializar en verdadero si no se ingresan valores
            if (!desdeCalorias.isEmpty() && !hastaCalorias.isEmpty()) {
                int caloriasDesde = Integer.parseInt(desdeCalorias);
                int caloriasHasta = Integer.parseInt(hastaCalorias);
                coincideCalorias = comida.getCaloriasPorPorcion() >= caloriasDesde && comida.getCaloriasPorPorcion() <= caloriasHasta;
            }

            // Verificar el tipo de comida (tipoSeleccionado = 0 es "todos los tipos") 
            boolean coincideTipo = comida.getTipoComida().equalsIgnoreCase(VistaActualizarRenglon1.TipoComidaRenglon);

            // Si todas las condiciones se cumplen, agregar la fila
            if (coincideNombre && coincideDetalle && coincideCalorias && coincideTipo) {
                modelo.addRow(new Object[]{
                    comida.getCodComida(),
                    comida.getNombre(),
                    comida.getTipoComida(),
                    comida.getCaloriasPorPorcion(),
                    comida.getDetalle()
                });
            }
        }
        
    }
      public boolean esDoubleValido(String valor) {
        try {
            Double.parseDouble(valor); 
            return true; 
        } catch (NumberFormatException e) {
            return false; 
        }
    }
    private void agregarValidacionNumerica(JTextField textField) {
    textField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyTyped(java.awt.event.KeyEvent evt) {
            char c = evt.getKeyChar();
            // Si el carácter no es un número y no es tecla de borrar (backspace)
            if (!Character.isDigit(c) && c != '\b') {
                evt.consume(); // Bloquear la tecla
            }
        }
    });
}
    private void configurarSpinner(JSpinner spinner) {
    // Establecer el modelo con un rango de 1 a 9 y un incremento de 1
    SpinnerNumberModel model = new SpinnerNumberModel(1, 1, 9, 1);
    spinner.setModel(model);

    // Deshabilitar la edición manual en el campo de texto del JSpinner
    JComponent editor = spinner.getEditor();
    JFormattedTextField textField = ((JSpinner.DefaultEditor) editor).getTextField();
    textField.setEditable(false); // Desactivar la edición manual
}
  
   
    
    public void limpiarCampos(){
        jtNombreComida.setText("");
        jtDetalleComida.setText("");
        jtDesdeCalorias.setText("");
        jtHastaCalorias.setText("");        
        jlCaloriasTotales.setText("");
        jsCantidadPorciones.setValue(1);
    }
  
}
