/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import Entidades.Dieta;
import Entidades.MenuDiario;
import Entidades.RenglonDeMenu;
import java.util.ArrayList;
import persistencia.ComidaData;
import persistencia.Conexion;
import persistencia.DietaData;
import persistencia.MenuDiarioData;
import persistencia.PacienteData;
import persistencia.RenglonDeMenuData;

/**
 *
 * @author El Angel
 */
public class VistaVerMenus extends javax.swing.JInternalFrame {
    Conexion conexion = new Conexion("jdbc:mysql://localhost/nutricionista", "root", "");
    PacienteData pacienteData = new PacienteData(conexion);
    RenglonDeMenuData renglonData = new RenglonDeMenuData(conexion);
    ComidaData comidaData = new ComidaData(conexion);    
    MenuDiarioData menuData = new MenuDiarioData(conexion);
    DietaData dietaData = new DietaData(conexion);
    /**
     * Creates new form VISTA
     */
    public VistaVerMenus() {
        initComponents();
        cargarCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtMenus = new javax.swing.JTextArea();
        jcbDieta = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jbSalir = new javax.swing.JButton();

        jtMenus.setColumns(20);
        jtMenus.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jtMenus.setRows(5);
        jScrollPane1.setViewportView(jtMenus);

        jcbDieta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbDietaActionPerformed(evt);
            }
        });
        jcbDieta.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jcbDietaPropertyChange(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Bahnschrift", 1, 24)); // NOI18N
        jLabel1.setText("Dietas");

        jLabel2.setFont(new java.awt.Font("Bahnschrift", 1, 24)); // NOI18N
        jLabel2.setText("Menus");

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jcbDieta, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(69, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(212, 212, 212))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jcbDieta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbSalir)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbDietaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jcbDietaPropertyChange
      
    }//GEN-LAST:event_jcbDietaPropertyChange

    private void jcbDietaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbDietaActionPerformed
        jtMenus.setText("");
        Dieta dieta = (Dieta) jcbDieta.getSelectedItem();
        StringBuilder resultado = new StringBuilder();
        MenuDiario menu=null;
        if (dieta != null) {
        ArrayList<RenglonDeMenu> lista = new ArrayList();
            for (MenuDiario menuDiario : menuData.listaMenuDiario()) {
                if (menuDiario.getDieta().getCodDieta()==dieta.getCodDieta()) {
                    for (RenglonDeMenu renglonDeMenu : renglonData.listarRenglonesDelaListaCodMenu(menuDiario.getCodMenu())) {
                        lista.add(renglonDeMenu);
                    }
                   menu=menuDiario;                  
                   resultado.append(imprimirMenuDiario(menu, lista));
                   resultado.append("                   ----------------------------------\n");
                   lista.clear();
                }
            }
            jtMenus.setText(resultado.toString());
            jtMenus.setCaretPosition(0);
        }
    }//GEN-LAST:event_jcbDietaActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
    dispose();
    }//GEN-LAST:event_jbSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Dieta> jcbDieta;
    private javax.swing.JTextArea jtMenus;
    // End of variables declaration//GEN-END:variables
    private void cargarCombo(){   
                for (Dieta listarTodosMenu : renglonData.listarTodosMenus()) {
            jcbDieta.addItem(listarTodosMenu);
        }
    }
    
    public String imprimirMenuDiario(MenuDiario menuDiario, ArrayList<RenglonDeMenu> renglonDeMenu) {
        StringBuilder resultado = new StringBuilder();
        String dia;
        switch (menuDiario.getDia()) {
            case 1:dia = "Lunes";break;
            case 2:dia = "Martes";break;
            case 3:dia = "Miercoles";break;
            case 4:dia = "Jueves";break;
            case 5:dia = "Viernes";break;
            case 6:dia = "Sabado";break;
            case 7:dia = "Domingo";break;
            default: dia="Lunes";
        }
        resultado.append("DÃ­a ").append(dia).append(": ").append(menuData.caloriasDelMenu(menuDiario.getCodMenu())).append(" kcal\n");

        for (RenglonDeMenu renglon : renglonDeMenu) {
            resultado.append(renglon.getComida().getNombre()).append("\n");
        }

        return resultado.toString();
    }
}
